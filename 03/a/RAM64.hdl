// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way (in=load, sel=address[3..5], a=aout, b=bout, c=cout, d=dout, e=eout, f=fout, g=gout, h=hout);
    RAM8 (in=in, load=aout, address=address[0..2], out=ramaout);
    RAM8 (in=in, load=bout, address=address[0..2], out=rambout);
    RAM8 (in=in, load=cout, address=address[0..2], out=ramcout);
    RAM8 (in=in, load=dout, address=address[0..2], out=ramdout);
    RAM8 (in=in, load=eout, address=address[0..2], out=rameout);
    RAM8 (in=in, load=fout, address=address[0..2], out=ramfout);
    RAM8 (in=in, load=gout, address=address[0..2], out=ramgout);
    RAM8 (in=in, load=hout, address=address[0..2], out=ramhout);
    Mux8Way16 (a=ramaout, b=rambout, c=ramcout, d=ramdout, e=rameout, f=ramfout, g=ramgout, h=ramhout, sel=address[3..5], out=out);
}
