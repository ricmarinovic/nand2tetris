// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way (in=load, sel=address, a=aout, b=bout, c=cout, d=dout, e=eout, f=fout, g=gout, h=hout);
    Register (in=in, load=aout, out=regaout);
    Register (in=in, load=bout, out=regbout);
    Register (in=in, load=cout, out=regcout);
    Register (in=in, load=dout, out=regdout);
    Register (in=in, load=eout, out=regeout);
    Register (in=in, load=fout, out=regfout);
    Register (in=in, load=gout, out=reggout);
    Register (in=in, load=hout, out=reghout);
    Mux8Way16 (a=regaout, b=regbout, c=regcout, d=regdout, e=regeout, f=regfout, g=reggout, h=reghout, sel=address, out=out);
}
